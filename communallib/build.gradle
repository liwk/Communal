apply plugin: 'com.android.library'
apply plugin: 'com.jakewharton.butterknife'
//添加这两行
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 3
        versionName "1.0.2"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.appcompat:appcompat:1.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

//    // appcompat，暂时不要更新版本，1.1.0 don't handle bug with webview in android 5.1.1
//    api 'androidx.appcompat:appcompat:1.1.0'
    // recyclerview
    implementation 'androidx.recyclerview:recyclerview:1.2.0-alpha02'

    // gson
    api 'com.google.code.gson:gson:2.8.6'

    // Banner
    api 'com.youth.banner:banner:1.4.10'

    // Bugly，其中latest.release指代最新版本号，也可以指定明确的版本号，例如1.2.0
    api 'com.tencent.bugly:crashreport_upgrade:1.4.5'
    api 'com.tencent.bugly:nativecrashreport:3.7.1'

    // RecyclerView适配器
    api 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.50'

    api 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.0'
    api 'com.scwang.smartrefresh:SmartRefreshHeader:1.1.0'

    // 微信（包含统计功能）
    api 'com.tencent.mm.opensdk:wechat-sdk-android-with-mta:+'

    // 图片加载
    api 'com.github.bumptech.glide:glide:4.11.0'
    // glide兼容
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'
    // glide-transformations
    api 'jp.wasabeef:glide-transformations:4.1.0'

    // Gif图片
    api 'pl.droidsonroids.gif:android-gif-drawable:1.2.19'

    // 事件总线
    api 'org.greenrobot:eventbus:3.2.0'

    // 2020/2/17 1.1.2->1.2.0
    api 'me.jessyan:autosize:1.2.0'

    // 日志
    api 'com.orhanobut:logger:2.2.0'

    // 运行时权限
    api 'com.github.tbruyelle:rxpermissions:0.10.2'
    // retrofit
    api 'com.squareup.retrofit2:retrofit:2.6.0'
    // Json转换器
    api 'com.squareup.retrofit2:converter-gson:2.5.0'
    // Log拦截器
    api 'com.squareup.okhttp3:logging-interceptor:4.0.1'
    // RxJava适配器
    api 'com.squareup.retrofit2:adapter-rxjava2:2.5.0'
    // rxjava
    api 'io.reactivex.rxjava2:rxjava:2.2.10'
    // rxandroid
    api 'io.reactivex.rxjava2:rxandroid:2.1.1'
    // RxJava生命周期
    api 'com.trello.rxlifecycle3:rxlifecycle-android:3.0.0'

    api 'com.jakewharton:butterknife:10.2.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.1'

    api 'com.github.yjfnypeu:UpdatePlugin:3.1.2'

}

//项目主页
def siteUrl = 'https://github.com/liwk/Communal'
//项目的git地址
def gitUrl = 'https://github.com/liwk/Communal.git'
//发布到JCenter上的项目名字
def libName = "Communal"

//发布到组织名称名字，必须填写
group = "com.egee.Communal"
// 版本号，下次更新是只需要更改版本号即可
version = "1.0.2"
//上面配置后上传至JCenter后的编译路径是这样的： compile 'com.egee.Communal:communallib:1.0.0'

//生成源文件
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

//生成Javadoc文档
task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

//文档打包成jar
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

//拷贝javadoc文件
task copyDoc(type: Copy) {
    from "${buildDir}/docs/"
    into "docs"
}
//上传到JCenter所需要的源码文件
artifacts {
    archives javadocJar
    archives sourcesJar
}

// 配置maven库，生成POM.xml文件
install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'
                //项目描述，随意填
                name 'base communal'
                url siteUrl
                licenses {
                    license {
                        //开源协议
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        //开发者的个人信息
                        id 'liwk'
                        name 'liwenkang'
                        email 'liwk_liwk@sina.com'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}

//上传到JCenter
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")    //读取 local.properties 文件里面的 bintray.user
    key = properties.getProperty("bintray.apikey")   //读取 local.properties 文件里面的 bintray.apikey
    configurations = ['archives']
    pkg {
        //这里的repo值必须要和你创建Maven仓库的时候的名字一样
        repo = "maven"
        //发布到JCenter上的项目名字
        name = libName
        //项目描述
        desc = 'A colorful circle view with text.'
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["Apache-2.0"]
        publish = true
    }
}
